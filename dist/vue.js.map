{"version":3,"file":"vue.js","sources":["../src/compiler/codegen.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //匹配花括号 {{  }} 捕获花括号里面的内容\n\n// 处理attrs属性\nfunction genProps(attrs) {\n  let str = '';\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n    // 特殊属性 style\n    if (attr.name === 'style') {\n      const obj = {};\n      attr.value.split(';').reduce((memo, current) => {\n        const [key, value] = current.split(':');\n        memo[key] = value;\n        return memo;\n      }, obj);\n      attr.value = obj;\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\n  }\n  return `{${str.slice(0, -1)}}`;\n}\n\nfunction gen(node) {\n  if (node.type === 1) {\n    return generate(node);\n  } else {\n    const text = node.text;\n    if (!defaultTagRE.test(text)) {\n      return `_v(${JSON.stringify(text)})`; // 不带表达式\n    } else {\n      const tokens = [];\n      let match;\n      // exec 遇到全局匹配会有 lastIndex 问题，每次匹配谦虚要将lastIndex置为0\n      let startIndex = (defaultTagRE.lastIndex = 0);\n      while ((match = defaultTagRE.exec(text))) {\n        const endIndex = match.index; // 匹配到的索引 abc ｛｛aa｝｝ {{bb}} cd\n        if (endIndex > startIndex) {\n          tokens.push(JSON.stringify(text.slice(startIndex, endIndex)));\n        }\n        tokens.push(`_s(${match[1].trim()})`);\n        startIndex = endIndex + match[0].length;\n      }\n      if (startIndex < text.length) {\n        // 将最后的尾巴也丢进去\n        tokens.push(JSON.stringify(text.slice(startIndex)));\n      }\n      return `_v(${tokens.join('+')})`; // 组合成最终的语法\n    }\n  }\n}\n\n// 生成子节点，递归创建\nfunction genChildren(el) {\n  const children = el.children;\n  if (children) {\n    return `${children.map((child) => gen(child)).join(',')}`;\n  }\n}\n\nexport function generate(el) {\n  // 字符串拼接\n  const children = genChildren(el);\n  let code = `_c('${el.tag}',${\n    el.attrs.length ? `${genProps(el.attrs)}` : 'undefined'\n  }${children ? `,${children}` : ''})`; // _c('div', {className: 'xxx'}, _v('hello world'))\n  return code;\n}\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; //匹配标签名 形如 abc-123\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //匹配特殊标签 形如 abc:234 前面的abc:可有可无\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配标签开始 形如 <abc-123 捕获里面的标签名\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束  >\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾 如 </abc-123> 捕获里面的标签名\nconst attribute =\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性  形如 id=\"app\"\n\nexport function parse(html) {\n  let root; // 树的操作，需要根据开始标签和结束标签产生一棵树\n  // 如何构建树的父子关系\n  let stack = [];\n  while (html) {\n    // 一个个字符来解析将结果跑出去\n    let textEnd = html.indexOf('<');\n    if (textEnd === 0) {\n      const startTagMatch = parseStartTag(); // 解析开始标签\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        continue;\n      }\n      let matches;\n      if ((matches = html.match(endTag))) {\n        // </div> 不是开始就会走到结束\n        end(matches[1]);\n        advance(matches[0].length);\n        continue;\n      }\n    }\n    let text;\n    if (textEnd >= 0) {\n      text = html.substring(0, textEnd);\n    }\n    if (text) {\n      advance(text.length);\n      chars(text);\n    }\n  }\n  function createASTElement(tagName, attrs) {\n    return {\n      tag: tagName,\n      attrs,\n      children: [],\n      parent: null,\n      type: 1,\n    };\n  }\n  function start(tagName, attrs) {\n    const element = createASTElement(tagName, attrs);\n    if (root == null) {\n      root = element;\n    }\n    const parent = stack[stack.length - 1]; // 取到栈中最后一个\n    if (parent) {\n      element.parent = parent; // 让这个元素记住自己的父亲是谁\n      parent.children.push(element); // 让父亲记住儿子是谁\n    }\n    // 将原素放到栈中\n    stack.push(element);\n  }\n  function end(tagName) {\n    stack.pop();\n  }\n  function chars(text) {\n    text = text.replace(/\\s/g, '');\n    if (text) {\n      const parent = stack[stack.length - 1];\n      parent.children.push({\n        type: 3,\n        text,\n      });\n    }\n  }\n  function parseStartTag() {\n    const matches = html.match(startTagOpen);\n    if (matches) {\n      const match = {\n        tagName: matches[1],\n        attrs: [],\n      };\n      advance(matches[0].length);\n      // 继续解析开始标签的属性\n      let end, attr;\n      while (\n        !(end = html.match(startTagClose)) &&\n        (attr = html.match(attribute))\n      ) {\n        // 只要没有匹配到结束标签就一直匹配\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5] || true,\n        });\n        advance(attr[0].length); // 解析一个属性删除一个\n      }\n      if (end) {\n        advance(end[0].length);\n        return match;\n      }\n    }\n  }\n  function advance(n) {\n    html = html.substring(n); // 每次根据传入的长度截取html\n  }\n  return root;\n}\n","import { generate } from './codegen';\nimport { parse } from './parse';\n\n// 将模板变成render函数，通过with+new Function的方式让字符串变成js语法来执行\nexport function compileToFunctions(template) {\n  const ast = parse(template);\n\n  // 通过ast语法树转换成render函数\n  const code = generate(ast);\n\n  // 使用with改变作用域为this\n  const renderFn = new Function(`with(this) {return ${code}}`);\n  return renderFn;\n}\n\n// 将template转换成ast语法树, 再将语法树转换成一个字符串拼接在一起\n// ast用来描述语言本身，语法中没有的，不会被描述出来\n// vdom描述真实dom元素，可以自己添加属性\n","// 创建元素vnode 等于render函数里面的 h=>h(App)\nexport function createElement(vm, tag, data = {}, ...children) {\n  return vnode(vm, tag, data, children, data.key, null);\n}\n\n// 创建文本vnode\nexport function createTextNode(vm, text) {\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\n}\n\nfunction vnode(vm, tag, data, children, key, text) {\n  return {\n    vm,\n    tag,\n    data,\n    children,\n    key,\n    text,\n    // ...\n  };\n}\n","export function patch(oldVnode, vnode) {\n  // oldVnode可能是后续做虚拟节点的时候，是两个虚拟节点的比较\n  const isRealElement = oldVnode.nodeType; // 如果有说明是一个dom元素\n  if (isRealElement) {\n    // 初次渲染\n    const oldElm = oldVnode;\n    // 需要获取父节点，将当前的节点的下一个节点作为参照物，将它插入，之后删除老节点\n    const parentNode = oldElm.parentNode; // 父节点\n    const el = createElm(vnode); // 根据虚拟节点转换成真实dom节点\n    // 插入到老的el节点下一个节点的前面，就相当于插入到老的el节点的后面\n    // 这里不直接使用父元素appendChild是为了不破坏替换的位置\n    parentNode.insertBefore(el, oldElm.nextSibling);\n    // 删除老的el节点\n    parentNode.removeChild(oldElm);\n    return el;\n  } else {\n    // diff 算法\n  }\n}\n\nfunction createElm(vnode) {\n  const { tag, data, children, text } = vnode;\n  if (typeof tag === 'string') {\n    // 元素\n    vnode.el = document.createElement(tag);\n    children.forEach((child) => {\n      vnode.el.appendChild(createElm(child)); // 递归渲染\n    });\n  } else {\n    // 文本\n    vnode.el = document.createTextNode(text);\n  }\n  return vnode.el;\n}\n\n// 每次更新页面的话，dom结构不会变，调用render方法时，数据变化了会根据数据渲染成新的虚拟节点，用新的虚拟节点渲染dom\n","import { createElement, createTextNode } from './vdom/index';\nimport { patch } from './vdom/patch';\n\n// 创建对应的虚拟节点，进行渲染\nexport function lifeCycleMixin(Vue) {\n  Vue.prototype._c = function () {\n    return createElement(this, ...arguments);\n  };\n  Vue.prototype._v = function () {\n    return createTextNode(this, ...arguments);\n  };\n  Vue.prototype._s = function (value) {\n    if (typeof value === 'object' && value != null) {\n      return JSON.stringify(value); // 将数据转换成字符串，因为使用的变量对应的结果可能是一个对象\n    }\n    return value;\n  };\n  Vue.prototype._render = function () {\n    const vm = this;\n    const render = vm.$options.render;\n    const vnode = render.call(vm);\n    return vnode;\n  };\n  Vue.prototype._update = function (vnode) {\n    // 将虚拟节点变成真实节点\n    // 将vnode渲染到el元素中\n    const vm = this;\n    vm.$el = patch(vm.$el, vnode); // 可以初始化渲染，后续更新也走这个patch方法\n  };\n}\n\n// 将模板ast => render => render函数产生虚拟节点（数据得是渲染好的）\n//                |________________|\nexport function mountComponent(vm, el) {\n  // 实现页面的挂载流程\n  vm.$el = el; // 先将el挂载到实例上\n  const updateComponent = () => {\n    // 需要调用生成的render函数，获取到虚拟节点，生成真实节点\n    vm._update(vm._render());\n  };\n  updateComponent(); // 如果稍后数据变化，也调用这个函数重新执行\n\n  // 观察者模式 + 依赖收集 + diff算法\n}\n","let oldArrayPrototype = Array.prototype;\n// arrayPrototype.__proto__ = Array.prototype\n\nlet arrayPrototype = Object.create(oldArrayPrototype);\nlet methods = ['push', 'pop', 'shift', 'unshift', 'splice', 'reverse', 'sort'];\nmethods.forEach((method) => {\n  // 用户调用push方法会先自己重写的方法, 之后调用数组原来的方法\n  arrayPrototype[method] = function (...args) {\n    let inserted;\n    const ob = this.__ob__;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args; // 数组\n        break;\n      case 'splice': // arr.splice(1, 1, xxx)\n        inserted = args.slice(2);\n        break;\n      default:\n        break;\n    }\n    if (inserted) {\n      // 对新增的数据再次进行观测\n      ob.observeArray(inserted);\n    }\n    return oldArrayPrototype[method].call(this, ...args);\n  };\n});\n\nexport default arrayPrototype;\n","import arrayPrototype from './array';\n\nclass Observer {\n  constructor(data) {\n    // 如果有__ob__属性, 说明被观测过了\n    Object.defineProperty(data, '__ob__', {\n      value: this,\n      enumerable: false, // 不可枚举\n      writable: true,\n      configurable: true,\n    });\n    if (Array.isArray(data)) {\n      // 如果是数组的话也是用defineProperty回浪费很多性能, 并且很少用户会通过索引操作 arr[666] = 777\n      // vue3中的Polyfill直接就给数组做代理了\n      // 改写数组的方法, 勇敢用户调用了可以改写数组方法的api, 那么就去劫持这个方法\n      // 变异方法 push pop shift unshift reverse sort splice\n      // 修改数组的索引和长度无法更新视图\n      data.__proto__ = arrayPrototype;\n      // 如果数组里面放的是对象类型, 期望它也会被变成响应式的\n      this.observeArray(data);\n    } else {\n      this.walk(data);\n    }\n  }\n  observeArray(data) {\n    data.forEach((item) => observe(item)); // 如果是对象才观测\n  }\n  walk(data) {\n    // 循环对象, 尽量不用for in 会遍历原型链\n    let keys = Object.keys(data);\n    keys.forEach((key) => {\n      // 没有重写数组里的每一项\n      defineReactive(data, key, data[key]);\n    });\n  }\n}\n\n// 性能不好的原因, 所有的属性都被重新定义了一遍\n// 一上来需要将对象深度代理, 性能差\nfunction defineReactive(data, key, value) {\n  observe(value); // 递归代理属性\n  // 属性会全部被重写添加了get和set\n  Object.defineProperty(data, key, {\n    get() {\n      return value;\n    },\n    set(newValue) {\n      observe(newValue); // 赋值一个对象, 也可以实现响应式数据\n      if (newValue !== value) {\n        value = newValue;\n      }\n    },\n  });\n}\n\nexport function observe(data) {\n  if (typeof data !== 'object' || data == null) {\n    // 如果不是对象类型, 那么不需要做任何处理\n    return;\n  }\n  if (data.__ob__) {\n    // 说明这个属性已经被代理过了\n    return;\n  }\n  // 如果一个对象已经被观测了, 就不要再次被观测了\n  // __ob__ 标识是否又被观测过\n  return new Observer(data);\n}\n\n// 总结:\n// 1.在Vue2中对象响应式原理, 就是给每个属性增加get和set, 而且递归操作(用户在写代码的时候尽量不要把所有属性都放在data中, 层次尽可能不要太深), 赋值一个新对象也会被变成响应式\n// 2.数组没有使用defineProperty, 采用的是函数劫持创造一个新的原型重写了这个原型的7个方法, 用户在调用的时候采用的是这7个方法, 增加了逻辑如果是新增的数据会再次被劫持, 最终调用数组的原有方法(注意数字的索引和长度没有被监控), 数组中对象类型会被进行响应式处理\n\n// 补充:\n// 1.每个类头有一个prototype指向了一个公共的空间\n// 2.每个实例可以通过__proto__找到所属类的prototype对应的内容\n","import { observe } from './observer/index';\n\nexport function initState(vm) {\n  // 获取传入的数据对象\n  const options = vm.$options;\n\n  // 后续实现计算属性 watch props methods\n  if (options.data) {\n    // 初始化data\n    initData(vm);\n  }\n}\n\nfunction proxy(vm, source, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[source][key];\n    },\n    set(newValue) {\n      vm[source][key] = newValue;\n    },\n  });\n}\n\nfunction initData(vm) {\n  let data = vm.$options.data;\n  // 如果是函数就拿到函数的返回值, 否则就直接采用data作为数据源\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n  // 期望用户可以直接通过 vm.xxx 获取值, 也可以这样取值 vm._data.xxx\n  for (let key in data) {\n    proxy(vm, '_data', key);\n  }\n  // 属性劫持, 采用defineProperty将所有的属性进行劫持\n  observe(data);\n}\n","import { compileToFunctions } from './compiler/index';\nimport { mountComponent } from './lifecycle';\nimport { initState } from './state';\n\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    const vm = this;\n    // vue中会判断如果是$开头的属性不会被变成响应式数据\n    this.$options = options; // 所有后续的扩展方法都有一个$options选项可以获取用户的所有选项\n\n    // 对于实例的数据源 props data methods computed watch\n    // prop data\n    initState(vm);\n\n    // 状态初始化完毕后需要进行页面挂载\n    if (vm.$options.el) {\n      // el属性和直接调用$mount是一样的\n      vm.$mount(vm.$options.el);\n    }\n  };\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    el = document.querySelector(el);\n    const options = vm.$options;\n    if (!options.render) {\n      let template = options.template;\n      if (!template && el) {\n        template = el.outerHTML;\n      }\n      // 将template变成render函数\n      // 创建render函数 => 虚拟dom => 渲染真实dom\n      const render = compileToFunctions(template); // 开始编译\n      options.render = render;\n    }\n    // 将当前组件实例挂载到真实的el节点上面\n    return mountComponent(vm, el);\n  };\n}\n\n// diff算法, 主要是两个虚拟节点的比对, 需要根据模板渲染出一个render函数, render函数可以返回一个虚拟节点, 数据更新了重新调用render函数, 可以再返回一个虚拟节点\n","// 整个自己编写的Vue入口\n\nimport { initMixin } from './init';\nimport { lifeCycleMixin } from './lifecycle';\n\n// es6的类, 要求所有的扩展都在类的内部来进行扩展\n\nfunction Vue(options) {\n  this._init(options);\n}\n\ninitMixin(Vue); // 后续再扩展都可以采用这种方式\nlifeCycleMixin(Vue);\n\n// 给Vue添加原型方法我们通过文件的方式来添加, 防止所有的功能都在一个文件中来处理\nexport default Vue;\n"],"names":["defaultTagRE","genProps","attrs","str","i","length","attr","name","obj","value","split","reduce","memo","current","_current$split","_current$split2","_slicedToArray","key","concat","JSON","stringify","slice","gen","node","type","generate","text","test","tokens","match","startIndex","lastIndex","exec","endIndex","index","push","trim","join","genChildren","el","children","map","child","code","tag","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","attribute","parse","html","root","stack","textEnd","indexOf","startTagMatch","parseStartTag","start","tagName","matches","end","advance","substring","chars","createASTElement","parent","element","pop","replace","n","compileToFunctions","template","ast","renderFn","Function","createElement","vm","data","arguments","undefined","_len","Array","_key","vnode","createTextNode","patch","oldVnode","isRealElement","nodeType","oldElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","forEach","appendChild","lifeCycleMixin","Vue","prototype","_c","apply","call","_v","_s","_typeof","_render","render","$options","_update","$el","mountComponent","updateComponent","oldArrayPrototype","arrayPrototype","Object","create","methods","method","_oldArrayPrototype$me","inserted","ob","__ob__","args","observeArray","Observer","_classCallCheck","defineProperty","enumerable","writable","configurable","isArray","__proto__","walk","_createClass","item","observe","keys","defineReactive","get","set","newValue","initState","options","initData","proxy","source","_data","initMixin","_init","$mount","querySelector","outerHTML"],"mappings":"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"}