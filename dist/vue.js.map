{"version":3,"file":"vue.js","sources":["../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["let oldArrayPrototype = Array.prototype;\n// arrayPrototype.__proto__ = Array.prototype\n\nlet arrayPrototype = Object.create(oldArrayPrototype);\nlet methods = ['push', 'pop', 'shift', 'unshift', 'splice', 'reverse', 'sort'];\nmethods.forEach((method) => {\n  // 用户调用push方法会先自己重写的方法, 之后调用数组原来的方法\n  arrayPrototype[method] = function (...args) {\n    let inserted;\n    const ob = this.__ob__;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args; // 数组\n        break;\n      case 'splice': // arr.splice(1, 1, xxx)\n        inserted = args.slice(2);\n        break;\n      default:\n        break;\n    }\n    if (inserted) {\n      // 对新增的数据再次进行观测\n      ob.observeArray(inserted);\n    }\n    return oldArrayPrototype[method].call(this, ...args);\n  };\n});\n\nexport default arrayPrototype;\n\n// 总结:\n// 1.在Vue2中对象响应式原理, 就是给每个属性增加get和set, 而且递归操作(用户在写代码的时候尽量不要把所有属性都放在data中, 层次尽可能不要太深), 赋值一个新对象也会被变成响应式\n// 2.数组没有使用defineProperty, 采用的是函数劫持创造一个新的原型重写了这个原型的7个方法, 用户在调用的时候采用的是这7个方法, 增加了逻辑如果是新增的数据会再次被劫持, 最终调用数组的原有方法(注意数字的索引和长度没有被监控), 数组中对象类型会被进行响应式处理\n","import arrayPrototype from './array';\n\nclass Observer {\n  constructor(data) {\n    // 如果有__ob__属性, 说明被观测过了\n    Object.defineProperty(data, '__ob__', {\n      value: this,\n      enumerable: false, // 不可枚举\n      writable: true,\n      configurable: true,\n    });\n    if (Array.isArray(data)) {\n      // 如果是数组的话也是用defineProperty回浪费很多性能, 并且很少用户会通过索引操作 arr[666] = 777\n      // vue3中的Polyfill直接就给数组做代理了\n      // 改写数组的方法, 勇敢用户调用了可以改写数组方法的api, 那么就去劫持这个方法\n      // 变异方法 push pop shift unshift reverse sort splice\n      // 修改数组的索引和长度无法更新视图\n      data.__proto__ = arrayPrototype;\n      // 如果数组里面放的是对象类型, 期望它也会被变成响应式的\n      this.observeArray(data);\n    } else {\n      this.walk(data);\n    }\n  }\n  observeArray(data) {\n    data.forEach((item) => observe(item)); // 如果是对象才观测\n  }\n  walk(data) {\n    // 循环对象, 尽量不用for in 会遍历原型链\n    let keys = Object.keys(data);\n    keys.forEach((key) => {\n      // 没有重写数组里的每一项\n      defineReactive(data, key, data[key]);\n    });\n  }\n}\n\n// 性能不好的原因, 所有的属性都被重新定义了一遍\n// 一上来需要将对象深度代理, 性能差\nfunction defineReactive(data, key, value) {\n  observe(value); // 递归代理属性\n  // 属性会全部被重写添加了get和set\n  Object.defineProperty(data, key, {\n    get() {\n      return value;\n    },\n    set(newValue) {\n      observe(newValue); // 赋值一个对象, 也可以实现响应式数据\n      if (newValue !== value) {\n        value = newValue;\n      }\n    },\n  });\n}\n\nexport function observe(data) {\n  if (typeof data !== 'object' || data == null) {\n    // 如果不是对象类型, 那么不需要做任何处理\n    return;\n  }\n  if (data.__ob__) {\n    // 说明这个属性已经被代理过了\n    return;\n  }\n  // 如果一个对象已经被观测了, 就不要再次被观测了\n  // __ob__ 标识是否又被观测过\n  return new Observer(data);\n}\n\n// 总结:\n// 1.在Vue2中对象响应式原理, 就是给每个属性增加get和set, 而且递归操作(用户在写代码的时候尽量不要把所有属性都放在data中, 层次尽可能不要太深), 赋值一个新对象也会被变成响应式\n// 2.数组没有使用defineProperty, 采用的是函数劫持创造一个新的原型重写了这个原型的7个方法, 用户在调用的时候采用的是这7个方法, 增加了逻辑如果是新增的数据会再次被劫持, 最终调用数组的原有方法(注意数字的索引和长度没有被监控), 数组中对象类型会被进行响应式处理\n\n// 补充:\n// 1.每个类头有一个prototype指向了一个公共的空间\n// 2.每个实例可以通过__proto__找到所属类的prototype对应的内容\n","import { observe } from './observer/index';\n\nexport function initState(vm) {\n  // 获取传入的数据对象\n  const options = vm.$options;\n\n  // 后续实现计算属性 watch props methods\n  if (options.data) {\n    // 初始化data\n    initData(vm);\n  }\n}\n\nfunction proxy(vm, source, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[source][key];\n    },\n    set(newValue) {\n      vm[source][key] = newValue;\n    },\n  });\n}\n\nfunction initData(vm) {\n  let data = vm.$options.data;\n  // 如果是函数就拿到函数的返回值, 否则就直接采用data作为数据源\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n  // 期望用户可以直接通过 vm.xxx 获取值, 也可以这样取值 vm._data.xxx\n  for (let key in data) {\n    proxy(vm, '_data', key);\n  }\n  // 属性劫持, 采用defineProperty将所有的属性进行劫持\n  observe(data);\n}\n","import { initState } from './state';\n\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    const vm = this;\n    // vue中会判断如果是$开头的属性不会被变成响应式数据\n    this.$options = options; // 所有后续的扩展方法都有一个$options选项可以获取用户的所有选项\n\n    // 对于实例的数据源 props data methods computed watch\n    // prop data\n    initState(vm);\n  };\n}\n","// 整个自己编写的Vue入口\n\nimport { initMixin } from './init';\n\n// es6的类, 要求所有的扩展都在类的内部来进行扩展\n\nfunction Vue(options) {\n  this._init(options);\n}\n\ninitMixin(Vue); // 后续再扩展都可以采用这种方式\n\n// 给Vue添加原型方法我们通过文件的方式来添加, 防止所有的功能都在一个文件中来处理\nexport default Vue;\n"],"names":["oldArrayPrototype","Array","prototype","arrayPrototype","Object","create","methods","forEach","method","_oldArrayPrototype$me","inserted","ob","__ob__","_len","arguments","length","args","_key","slice","observeArray","call","apply","concat","Observer","data","_classCallCheck","defineProperty","value","enumerable","writable","configurable","isArray","__proto__","walk","_createClass","key","item","observe","keys","defineReactive","get","set","newValue","_typeof","initState","vm","options","$options","initData","proxy","source","_data","initMixin","Vue","_init"],"mappings":"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"}