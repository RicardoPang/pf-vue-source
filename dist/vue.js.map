{"version":3,"file":"vue.js","sources":["../src/compiler/codegen.js","../src/compiler/parse.js","../src/compiler/index.js","../src/gloablAPI.js","../src/observer/dep.js","../src/observer/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //匹配花括号 {{  }} 捕获花括号里面的内容\n\n// 处理attrs属性\nfunction genProps(attrs) {\n  let str = '';\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n    // 特殊属性 style\n    if (attr.name === 'style') {\n      const obj = {};\n      attr.value.split(';').reduce((memo, current) => {\n        const [key, value] = current.split(':');\n        memo[key] = value;\n        return memo;\n      }, obj);\n      attr.value = obj;\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\n  }\n  return `{${str.slice(0, -1)}}`;\n}\n\nfunction gen(node) {\n  if (node.type === 1) {\n    return generate(node);\n  } else {\n    const text = node.text;\n    if (!defaultTagRE.test(text)) {\n      return `_v(${JSON.stringify(text)})`; // 不带表达式\n    } else {\n      const tokens = [];\n      let match;\n      // exec 遇到全局匹配会有 lastIndex 问题，每次匹配谦虚要将lastIndex置为0\n      let startIndex = (defaultTagRE.lastIndex = 0);\n      while ((match = defaultTagRE.exec(text))) {\n        const endIndex = match.index; // 匹配到的索引 abc ｛｛aa｝｝ {{bb}} cd\n        if (endIndex > startIndex) {\n          tokens.push(JSON.stringify(text.slice(startIndex, endIndex)));\n        }\n        tokens.push(`_s(${match[1].trim()})`);\n        startIndex = endIndex + match[0].length;\n      }\n      if (startIndex < text.length) {\n        // 将最后的尾巴也丢进去\n        tokens.push(JSON.stringify(text.slice(startIndex)));\n      }\n      return `_v(${tokens.join('+')})`; // 组合成最终的语法\n    }\n  }\n}\n\n// 生成子节点，递归创建\nfunction genChildren(el) {\n  const children = el.children;\n  if (children) {\n    return `${children.map((child) => gen(child)).join(',')}`;\n  }\n}\n\nexport function generate(el) {\n  // 字符串拼接\n  const children = genChildren(el);\n  let code = `_c('${el.tag}',${\n    el.attrs.length ? `${genProps(el.attrs)}` : 'undefined'\n  }${children ? `,${children}` : ''})`; // _c('div', {className: 'xxx'}, _v('hello world'))\n  return code;\n}\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; //匹配标签名 形如 abc-123\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //匹配特殊标签 形如 abc:234 前面的abc:可有可无\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配标签开始 形如 <abc-123 捕获里面的标签名\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束  >\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾 如 </abc-123> 捕获里面的标签名\nconst attribute =\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性  形如 id=\"app\"\n\nexport function parse(html) {\n  let root; // 树的操作，需要根据开始标签和结束标签产生一棵树\n  // 如何构建树的父子关系\n  let stack = [];\n  function createASTElement(tagName, attrs) {\n    return {\n      tag: tagName,\n      attrs,\n      children: [],\n      parent: null,\n      type: 1,\n    };\n  }\n  function start(tagName, attrs) {\n    const element = createASTElement(tagName, attrs);\n    if (root == null) {\n      root = element;\n    }\n    const parent = stack[stack.length - 1]; // 取到栈中最后一个\n    if (parent) {\n      element.parent = parent; // 让这个元素记住自己的父亲是谁\n      parent.children.push(element); // 让父亲记住儿子是谁\n    }\n    // 将原素放到栈中\n    stack.push(element);\n  }\n  function end(tagName) {\n    stack.pop();\n  }\n  function chars(text) {\n    text = text.replace(/\\s/g, '');\n    if (text) {\n      const parent = stack[stack.length - 1];\n      if (parent) {\n        // Check if parent exists\n        parent.children.push({\n          type: 3,\n          text,\n        });\n      }\n    }\n  }\n  function parseStartTag() {\n    const matches = html.match(startTagOpen);\n    if (matches) {\n      const match = {\n        tagName: matches[1],\n        attrs: [],\n      };\n      advance(matches[0].length);\n      // 继续解析开始标签的属性\n      let end, attr;\n      while (\n        !(end = html.match(startTagClose)) &&\n        (attr = html.match(attribute))\n      ) {\n        // 只要没有匹配到结束标签就一直匹配\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5] || true,\n        });\n        advance(attr[0].length); // 解析一个属性删除一个\n      }\n      if (end) {\n        advance(end[0].length);\n        return match;\n      }\n    }\n  }\n  function advance(n) {\n    html = html.substring(n); // 每次根据传入的长度截取html\n  }\n  while (html) {\n    // 一个个字符来解析将结果跑出去\n    let textEnd = html.indexOf('<');\n    if (textEnd === 0) {\n      const startTagMatch = parseStartTag(); // 解析开始标签\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        continue;\n      }\n      let matches;\n      if ((matches = html.match(endTag))) {\n        // </div> 不是开始就会走到结束\n        end(matches[1]);\n        advance(matches[0].length);\n        continue;\n      }\n    }\n    let text;\n    if (textEnd >= 0) {\n      text = html.substring(0, textEnd);\n    }\n    if (text) {\n      advance(text.length);\n      chars(text);\n    }\n  }\n  return root;\n}\n","import { generate } from './codegen';\nimport { parse } from './parse';\n\n// 将模板变成render函数，通过with+new Function的方式让字符串变成js语法来执行\nexport function compileToFunctions(template) {\n  const ast = parse(template);\n\n  // 通过ast语法树转换成render函数\n  const code = generate(ast);\n\n  // 使用with改变作用域为this\n  const renderFn = new Function(`with(this) {return ${code}}`);\n  return renderFn;\n}\n\n// 将template转换成ast语法树, 再将语法树转换成一个字符串拼接在一起\n// ast用来描述语言本身，语法中没有的，不会被描述出来\n// vdom描述真实dom元素，可以自己添加属性\n","export default function initGlobalAPI(Vue) {\n  Vue.options = {};\n  Vue.options._base = Vue;\n  Vue.mixin = function (options) {\n    this.options = mergeOptions(this.options, options);\n    return this;\n  };\n\n  // 组件核心方法 可以手动创造组件进行挂载\n  Vue.extend = function (options) {\n    // 就是实现根据用户的参数 返回一个构造而已\n    function Sub(options = {}) {\n      // 最终使用一个组件 就是new一个实例\n      this._init(options); // 就是默认对子类进行初始化操作\n    }\n    // 子类继承父类原型方法\n    Sub.prototype = Object.create(Vue.prototype); // Sub.prototype.__proto__ === Vue.prototype\n    Sub.prototype.constructor = Sub;\n\n    // 希望将用户传递的参数 和全局的Vue.options来合并\n    Sub.options = mergeOptions(Vue.options, options); // 保存用户传递的选项\n    return Sub;\n  };\n  Vue.options.components = {}; // 放的是全局组件 全局的指令 Vue.otpions.directives\n  Vue.component = function (id, definition) {\n    // 如果definition已经是一个函数了 说明用户自己调用了Vue.extend\n    definition =\n      typeof definition === 'function' ? definition : Vue.extend(definition);\n    Vue.options.components[id] = definition;\n  };\n}\n\nconst strats = {};\nconst LIFECYCLE = ['beforeCreate', 'created'];\n\nLIFECYCLE.forEach((hook) => {\n  strats[hook] = function (p, c) {\n    if (c) {\n      // 如果儿子有 父亲有 让父亲和儿子拼在一起\n      if (p) {\n        return p.concat(c); // 最终八生命周期都合并在一起了\n      } else {\n        return [c]; // 儿子有父亲没有 则将儿子包装秤数组\n      }\n    } else {\n      return p; // 如果儿子没有则用父亲即可\n    }\n  };\n});\n\nstrats.components = function (parentVal, childVal) {\n  const res = Object.create(parentVal);\n  if (childVal) {\n    for (let key in childVal) {\n      res[key] = childVal[key]; // 返回的是构造的对象 可以拿到父亲原型上的属性 并且将儿子的拷贝到自己身上\n    }\n  }\n  return res;\n};\n\nexport function mergeOptions(parent, child) {\n  const options = {};\n  for (let key in parent) {\n    // 循环老的\n    mergeField(key);\n  }\n  for (let key in child) {\n    if (!parent.hasOwnProperty(key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    // 策略模式 减少if-else\n    if (strats[key]) {\n      options[key] = strats[key](parent[key], child[key]);\n    } else {\n      // 如果不在测量中则以儿子为主\n      options[key] = child[key] || parent[key]; // 优先采用儿子 再采用父亲\n    }\n  }\n  return options;\n}\n\n// Vue.extend 给我一个对象 我会根据这个对象生成一个类 后续使用组件的时候其实就是new这个类\n// 这个子类会继承父类Vue\n","let id = 0;\nclass Dep {\n  constructor() {\n    this.id = id++; // 属性的dep要收集watcher\n    this.subs = []; // 这里存放着当前属性对应的watcher有哪些\n  }\n  depend() {\n    // 这里我们不希望放重复的watcher，而且刚才只是一个单向的关系 dep -> watcher\n    // watcher 记录dep\n    // this.subs.push(Dep.target);\n\n    Dep.target.addDep(this); // 让watcher记住dep\n\n    // dep 和 watcher是一个多对多的关系 （一个属性可以在多个组件中使用 dep -> 多个watcher）\n    // 一个组件中由多个属性组成 （一个watcher 对应多个dep）\n  }\n  addSub(watcher) {\n    this.subs.push(watcher);\n  }\n  notify() {\n    this.subs.forEach((watcher) => watcher.update()); // 告诉watcher要更新了\n  }\n}\nDep.target = null;\nlet stack = [];\nexport function pushTarget(watcher) {\n  stack.push(watcher);\n  Dep.target = watcher;\n}\nexport function popTarget() {\n  stack.pop();\n  Dep.target = stack[stack.length - 1];\n}\n\nexport default Dep;\n","import { popTarget, pushTarget } from './dep';\n\nlet id = 0;\n\n// 1）当我们创建渲染watcher的时候我们会把当前的渲染watcher放到Dep.target上\n// 2) 调用_render() 会取值 走到get上\n// 每个属性有一个dep（属性就是被观察者）,watcher就是观察者（属性变化了会通知观察者来更新）-> 观察者模式\nclass Watcher {\n  // 不同组件有不同的watcher 目前只有一个 渲染根实例的\n  constructor(vm, exprOrFn, options, cb) {\n    this.id = id++;\n    this.renderWatcher = options; // 是一个渲染watcher\n    this.deps = []; // 后续我们实现计算属性，和一些清理工作需要用到\n    this.depsId = new Set();\n    this.cb = cb;\n    this.vm = vm;\n    this.lazy = options.lazy; // lazy属性是用来标识默认是否调用函数\n    this.dirty = this.lazy; // dirty属性是用来作缓存的\n    this.user = options.user; // 标识是否是用户自己的watcher\n\n    // 如果给的是一个字符串 需要去通过字符串取值\n    if (typeof exprOrFn === 'string') {\n      this.getter = function () {\n        const path = exprOrFn.split('.'); // [a.b]\n        return path.reduce((vm, current) => {\n          vm = vm[current];\n          return vm;\n        }, vm);\n      };\n    } else {\n      this.getter = exprOrFn; // getter意味着调用这个函数可以发生取值操作\n    }\n\n    this.value = this.lazy ? undefined : this.get(); // 实现页面渲染\n  }\n  addDep(dep) {\n    // 一个组件对应着多个属性 重复的属性也不用记录\n    let id = dep.id;\n    if (!this.depsId.has(id)) {\n      this.deps.push(dep);\n      this.depsId.add(id);\n      dep.addSub(this); // watcher已经记住了dep了而且去重了，此时让dep也记住watcher\n    }\n  }\n  evaluate() {\n    this.value = this.get(); // 获取到用户函数的返回值 并且还要标识为脏\n    this.dirty = false;\n  }\n  get() {\n    pushTarget(this); // 静态属性就是只有一份\n    let value = this.getter.call(this.vm); // 会去vm上取值 vm._update(vm._render) 取name 和age\n    popTarget(); // 渲染完毕后就清空\n    return value;\n  }\n  depend() {\n    // watcher的depend 就是让watcher中dep去depend\n    let i = this.deps.length;\n    while (i--) {\n      // 让dep记住渲染watcher\n      this.deps[i].depend(); // 让计算属性watcher 也收集渲染watcher\n    }\n  }\n  update() {\n    if (this.lazy) {\n      // 如果是计算属性 依赖的值变化了 就标识计算属性是脏值了\n      this.dirty = true;\n    } else {\n      queueWatcher(this); // 把当前的watcher 暂存起来\n      // this.get(); // 重新渲染\n    }\n  }\n  run() {\n    let oldValue = this.value;\n    let newValue = this.get(); // 渲染的时候用的是最新的vm来渲染的\n    if (this.user && this.cb) {\n      // 如果是用户watcher 则调用用户传入的callback\n      this.cb.call(this.vm, newValue, oldValue);\n    }\n  }\n}\n\nlet queue = [];\nlet has = {};\nlet pending = false; // 防抖\nfunction flushSchedulerQueue() {\n  let flushQueue = queue.slice(0);\n  queue = [];\n  has = {};\n  pending = false;\n  flushQueue.forEach((q) => q.run()); // 在刷新的过程中可能还有新的watcher，重新放到queue中\n}\nfunction queueWatcher(watcher) {\n  const id = watcher.id;\n  if (!has[id]) {\n    queue.push(watcher);\n    has[id] = true;\n    // 不管我们的update执行多少次 ，但是最终只执行一轮刷新操作\n    if (!pending) {\n      nextTick(flushSchedulerQueue, 0);\n      pending = true;\n    }\n  }\n}\n\nlet callbacks = [];\nlet waiting = false;\nfunction flushCallbacks() {\n  // 默认第一次会将两次的nextTick 都维护到callbacks中 [用户的, 页面渲染的]\n  let cbs = callbacks.slice(0);\n  waiting = false;\n  callbacks = [];\n  cbs.forEach((cb) => cb()); // 按照顺序依次执行\n}\n// nextTick 没有直接使用某个api 而是采用优雅降级的方式\n// 内部先采用的是promise（ie不兼容）MutationObserver(h5的api) 可以考虑ie专享的 setImmediate setTimeout\nlet timerFunc;\nif (Promise) {\n  timerFunc = () => {\n    Promise.resolve().then(flushCallbacks);\n  };\n} else if (MutationObserver) {\n  let observer = new MutationObserver(flushCallbacks); // 这里传入的回调是异步执行的\n  let textNode = document.createTextNode(1);\n  observer.observe(textNode, {\n    characterData: true,\n  });\n  timerFunc = () => {\n    textNode.textContent = 2;\n  };\n} else if (setImmediate) {\n  timerFunc = () => {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  timerFunc = () => {\n    setTimeout(flushCallbacks);\n  };\n}\n// 异步任务分为两种,宏任务/微任务\n// 宏任务 setTimeout setImmediate(IE下支持性能优于setTimeout)\n// 微任务 promise.then mutationObserver\n// Vue在更新的时候希望尽快的更新页面 Promise.then MutationObserver setImmediate setImmediate\n// Vue3不再考虑兼容性问题了, 所以后续Vue3中直接使用Promise.then\nexport function nextTick(cb) {\n  // 先内部还是先用户的？\n  callbacks.push(cb); // 维护nextTick中的cakllback方法\n  if (!waiting) {\n    timerFunc();\n    // Promise.resolve().then(flushCallbacks);\n    waiting = true;\n  }\n}\n\n// 需要给每个属性增加一个dep， 目的就是收集watcher\n\n// 一个组件中 有多少个属性 （n个属性会对应一个视图） n个dep对应一个watcher\n// 1个属性 对应着多个组件  1个dep对应多个watcher\n// 多对多的关系\n\nexport default Watcher;\n","// 1.先声明组件的映射关系 Vue.component (components: xxx)\n// 2.需要根据组件的名字生成一个组件的虚拟节点\n// 3.需要去创造组件的实例\n// 4.替换原来渲染内容\n\nconst isReservedTag = (tag) => {\n  return ['a', 'div', 'p', 'button', 'ul', 'li', 'span'].includes(tag);\n};\n\n// 创建元素vnode 等于render函数里面的 h=>h(App)\nexport function createElement(vm, tag, data = {}, ...children) {\n  // 需要判断tag是元素还是组件\n  if (isReservedTag(tag)) {\n    return vnode(vm, tag, data, children, data.key, undefined);\n  } else {\n    // 创造组件的虚拟节点 组件需要找到组件的模版去进行渲染\n    const Ctor = vm.$options.components[tag]; // 罪案构造函数\n    // Ctor就是组件的定义 可能是一个Sub类 还有可能更是组件的obj选项\n    return createComponentVnode(vm, tag, data, children, data.key, Ctor);\n  }\n}\n\nconst init = (vnode) => {\n  // 组件的虚拟节点上有组件的实例 new Sub()._init()\n  const child = (vnode.componentInstance = new vnode.componentOptions.Ctor({})); // 组件的children {} 放插槽属性\n  child.$mount();\n};\n\nfunction createComponentVnode(vm, tag, key, data, children, Ctor) {\n  if (typeof Ctor === 'object' && Ctor !== null) {\n    Ctor = vm.$options._base.extend(Ctor); // 组件内部声明的components属性也会包装成类\n  }\n  data.hook = {\n    // 稍后创造真实节点的时候 如果是组件则调用此init方法\n    init,\n  };\n  return vnode(vm, tag, data, undefined, key, undefined, { Ctor, children });\n}\n\n/**\n * 先将模板变成了ast语法树 => 生成了render函数 => 创造虚拟节点(虚拟节点可能是元素也可能是组件),\n * 如果是组件就创造组件的虚拟节点(data.hook componentOptions里面放着组件的Ctor) =>\n * 创造真实节点 createElm => 组件会调用init(创造组件的实例并挂载)\n */\n\n// 创建文本vnode\nexport function createTextNode(vm, text) {\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\n}\n\nfunction vnode(vm, tag, data, children, key, text, componentOptions) {\n  return {\n    vm,\n    tag,\n    data,\n    children,\n    key,\n    text,\n    componentOptions, // 组件的构造函数\n    // ...\n  };\n}\n","function isSameVnode(n1, n2) {\n  // 如果两个人的标签和key 一样我认为是同一个节点 虚拟节点一样我就可以复用真实节点了\n  return n1.tag === n2.tag && n1.key === n2.key;\n}\n\n// 调用组件初始化方法\nfunction createComponent(vnode) {\n  let i = vnode.data;\n  if ((i = i.hook) && (i = i.init)) {\n    i(vnode); // 初始化组件 找到init方法\n  }\n  if (vnode.componentInstance) {\n    return true; // 说明是组件\n  }\n}\n\nexport function createElm(vnode) {\n  const { tag, data, children, text } = vnode;\n  if (typeof tag === 'string') {\n    // 元素\n    if (createComponent(vnode)) {\n      return vnode.componentInstance.$el;\n    }\n    vnode.el = document.createElement(tag);\n    patchProps(vnode.el, {}, data);\n    children.forEach((child) => {\n      vnode.el.appendChild(createElm(child)); // 递归渲染\n    });\n  } else {\n    // 文本\n    vnode.el = document.createTextNode(text);\n  }\n  return vnode.el;\n}\n\nfunction patchProps(el, oldProps = {}, props = {}) {\n  // 老的属性中有 新的没有 要删除老的\n  const oldStyles = oldProps.style || {};\n  const newStyles = props.style || {};\n  for (let key in oldStyles) {\n    // 老的样式有 新的没有则删除\n    if (!newStyles[key]) {\n      el.style[key] = '';\n    }\n  }\n  for (let key in oldProps) {\n    // 老的属性有 新的没有删除属性\n    if (!props[key]) {\n      el.removeAttribute(key);\n    }\n  }\n  for (let key in props) {\n    // 用新的覆盖老的\n    if (key === 'style') {\n      for (let styleName in props.style) {\n        el.style[styleName] = props.style[styleName];\n      }\n    } else {\n      el.setAttribute(key, props[key]);\n    }\n  }\n}\n\nfunction mountChildren(el, newChildren) {\n  for (let i = 0; i < newChildren.length; i++) {\n    let child = newChildren[i];\n    el.appendChild(createElm(child));\n  }\n}\n\nfunction patchVnode(oldVnode, vnode) {\n  // case1: 前后两个虚拟节点不是相同节点 直接替换掉即可\n  if (!isSameVnode(oldVnode, vnode)) {\n    return oldVnode.el.parentNode.replaceChild(createElm(vnode), oldVnode.el);\n  }\n  // 标签一样就复用节点\n  let el = (vnode.el = oldVnode.el);\n  // case2: 两个元素虚拟节点都是文本的情况下 用新文本替换到老文本\n  if (!oldVnode.tag) {\n    if (oldVnode.text !== vnode.text) {\n      return (el.textContent = vnode.text);\n    }\n  }\n  // case3: 两个都是标签 比对标签属性\n  patchProps(el, oldVnode.data, vnode.data);\n  // case4: 比较儿子节点 一方有儿子 一方没儿子 两方都有儿子\n  const oldChildren = oldVnode.children || [];\n  const newChildren = vnode.children || [];\n  if (oldChildren.length > 0 && newChildren.length > 0) {\n    // 完整diff算法 比对两个儿子 一层层比较, 不涉及夸级比较\n    updateChildren(el, oldChildren, newChildren);\n  } else if (newChildren.length > 0) {\n    // 没有老的 有新的\n    mountChildren(el, newChildren);\n  } else if (oldChildren.length > 0) {\n    // 新的没有 老的有 直接删除\n    el.innerHTML = ''; // 可以循环删除\n  }\n  return el;\n}\n\n// Vue2.0中采用双指针的方式比较两个节点\n// 操作列表经常会有push shift pop unshift reverse sort这些方法(针对镇邪情况做一些优化)\nfunction updateChildren(el, oldChildren, newChildren) {\n  // Vue中创建了4个指针 分别指向老孩子和新孩子的头尾\n  // 分别一次进行比较有一方先比较完毕就结束\n  let oldStartIndex = 0;\n  let newStartIndex = 0;\n  let oldEndIndex = oldChildren.length - 1;\n  let newEndIndex = newChildren.length - 1;\n\n  let oldStartVnode = oldChildren[0];\n  let newStartVnode = newChildren[0];\n  let oldEndVnode = oldChildren[oldEndIndex];\n  let newEndVnode = newChildren[newEndIndex];\n\n  function makeIndexByKey(children) {\n    const map = {};\n    children.forEach((child, index) => {\n      map[child.key] = index;\n    });\n    return map;\n  }\n  const map = makeIndexByKey(oldChildren);\n\n  // 有任何一个不满足则停止 || 有一个为true就继续走\n  // 双方有一方的头指针 大于尾部指针则停止循环\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n    if (!oldStartVnode) {\n      oldStartVnode = oldChildren[++oldStartIndex];\n    } else if (!oldEndVnode) {\n      oldEndVnode = oldChildren[--oldEndIndex];\n    } else if (isSameVnode(oldStartVnode, newStartVnode)) {\n      // 说明两个是同一个元素 要比较属性和它的儿子\n      patchVnode(oldStartVnode, newStartVnode);\n      oldStartVnode = oldChildren[++oldStartIndex];\n      newStartVnode = newChildren[++newStartIndex];\n      // 比较开头节点\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n      // 说明两个是同一个元素 要比较属性和它的儿子\n      patchVnode(oldEndVnode, newEndVnode);\n      oldEndVnode = oldChildren[--oldEndIndex];\n      newEndVnode = newChildren[--newEndIndex];\n      // 比较结尾节点\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n      patchVnode(oldEndVnode, newStartVnode);\n      // insertBefore具备移动性 会将原来的元素移动走\n      el.insertBefore(oldEndVnode.el, oldStartVnode.el); // 将老的尾巴移动到老的前面去\n      oldEndVnode = oldChildren[--oldEndIndex];\n      newStartVnode = newChildren[++newStartIndex];\n      // 比较尾头节点\n    } else if (isSameVnode(oldStartVnode, newEndVnode)) {\n      patchVnode(oldStartVnode, newEndVnode);\n      // insertBefore具备移动性 会将原来的元素移动走\n      el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling); // 将老的尾巴移动到老的后面去\n      oldStartVnode = oldChildren[++oldStartIndex];\n      newEndVnode = newChildren[--newEndIndex];\n      // 比较头尾节点\n    } else {\n      // 根据老的列表做一个映射关系 用新的去找 找到则移动 找不到则添加 最后多余的删除\n      // 给动态列表添加key的时候 要尽量避免使用索引 因为索引前后都是从0开始 可能会发生错误复用\n      const moveIndex = map[newStartVnode.key]; // 如果拿到则说明是要移动的索引\n      if (moveIndex !== undefined) {\n        const moveVnode = oldChildren[moveIndex]; // 找到对应的虚拟节点 复用\n        el.insertBefore(moveVnode.el, oldStartVnode.el);\n        oldChildren[moveIndex] = undefined; // 表示这个节点已经移动走了\n        patchVnode(moveVnode, newStartVnode); // 比对属性和子节点\n      } else {\n        el.insertBefore(createElm(newStartVnode), oldStartVnode.el);\n      }\n      newStartVnode = newChildren[++newStartIndex];\n      // 乱序比对\n    }\n  }\n  if (newStartIndex <= newEndIndex) {\n    // 新的多了 多余的就插入进去\n    for (let i = newStartIndex; i <= newEndIndex; i++) {\n      const childEl = createElm(newChildren[i]);\n      // 这里可能向后追加 还可能是向前追加\n      let anchor = newChildren[newEndIndex + 1]\n        ? newChildren[newEndIndex + 1].el\n        : null; // 获取下一个元素\n      el.insertBefore(childEl, anchor); // anchor为null的时候则会认为是appendChild\n    }\n  }\n  if (oldStartIndex <= oldEndIndex) {\n    // 老的多了 需要删除老的\n    for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n      if (oldChildren[i]) {\n        const childEl = oldChildren[i].el;\n        el.removeChild(childEl);\n      }\n    }\n  }\n}\n\nexport function patch(oldVnode, vnode) {\n  if (!oldVnode) {\n    // 这就是组件的挂载\n    return createElm(vnode); // vm.$el 对应的就是组件渲染的结果了\n  }\n\n  // oldVnode可能是后续做虚拟节点的时候，是两个虚拟节点的比较\n  const isRealElement = oldVnode.nodeType; // 如果有说明是一个dom元素\n  if (isRealElement) {\n    // 初次渲染\n    const oldElm = oldVnode;\n    // 需要获取父节点，将当前的节点的下一个节点作为参照物，将它插入，之后删除老节点\n    const parentNode = oldElm.parentNode; // 父节点\n    const el = createElm(vnode); // 根据虚拟节点转换成真实dom节点\n    // 插入到老的el节点下一个节点的前面，就相当于插入到老的el节点的后面\n    // 这里不直接使用父元素appendChild是为了不破坏替换的位置\n    parentNode.insertBefore(el, oldElm.nextSibling);\n    // 删除老的el节点\n    parentNode.removeChild(oldElm);\n    return el;\n  } else {\n    // 1.两个节点不是同一个节点 直接删除老的换上新的(没有比对)\n    // 2.两个节点是同一个节点(判断节点的tag和节点的key) 比较两个节点的属性是否有差异(复用老节点 将差异的属性更新)\n    // 3.节点比较完毕后就需要比较两个的儿子了\n    patchVnode(oldVnode, vnode);\n    return vnode.el; // 最终返回新的el元素\n  }\n}\n\n// 1.每次更新页面的话，dom结构不会变，调用render方法时，数据变化了会根据数据渲染成新的虚拟节点，用新的虚拟节点渲染dom\n// 2.Vue3采用了最长递增子序列 找到最长不需要移动的序列 从而减少了移动操作\n","import Watcher from './observer/watcher';\nimport { createElement, createTextNode } from './vdom/index';\nimport { patch } from './vdom/patch';\n\nexport function callHook(vm, hook) {\n  const handlers = vm.$options[hook];\n  if (handlers) {\n    for (let i = 0; i < handlers.length; i++) {\n      handlers[i].call(vm);\n    }\n  }\n}\n\n// 创建对应的虚拟节点，进行渲染\nexport function lifeCycleMixin(Vue) {\n  Vue.prototype._c = function () {\n    return createElement(this, ...arguments);\n  };\n  Vue.prototype._v = function () {\n    return createTextNode(this, ...arguments);\n  };\n  Vue.prototype._s = function (value) {\n    if (typeof value === 'object' && value != null) {\n      return JSON.stringify(value); // 将数据转换成字符串，因为使用的变量对应的结果可能是一个对象\n    }\n    return value;\n  };\n  Vue.prototype._render = function () {\n    const vm = this;\n    const render = vm.$options.render;\n    const vnode = render.call(vm);\n    return vnode;\n  };\n  Vue.prototype._update = function (vnode) {\n    // 将虚拟节点变成真实节点\n    // 将vnode渲染到el元素中\n    const vm = this;\n    const prevVnode = vm._vnode; // 上一次的vNode\n    if (!prevVnode) {\n      vm.$el = patch(vm.$el, vnode); // 可以初始化渲染，后续更新也走这个patch方法\n    } else {\n      vm.$el = patch(prevVnode, vnode);\n    }\n    vm._vnode = vnode; // 渲染完毕后重新更新vnode\n  };\n}\n\n// 将模板ast => render => render函数产生虚拟节点（数据得是渲染好的）\n//                |________________|\nexport function mountComponent(vm, el) {\n  // 实现页面的挂载流程\n  vm.$el = el; // 先将el挂载到实例上\n  const updateComponent = () => {\n    // 需要调用生成的render函数，获取到虚拟节点，生成真实节点\n    vm._update(vm._render());\n  };\n  new Watcher(\n    vm,\n    updateComponent,\n    () => {\n      console.log('页面传喔国内新渲染 updated');\n    },\n    true\n  );\n  // updateComponent(); // 如果稍后数据变化，也调用这个函数重新执行\n  // 观察者模式 + 依赖收集 + diff算法\n}\n","// 获取数组原型\nlet oldArrayPrototype = Array.prototype;\n// arrayPrototype.__proto__ = Array.prototype\nlet arrayPrototype = Object.create(oldArrayPrototype);\n// 数组变异方法\nlet methods = ['push', 'pop', 'shift', 'unshift', 'splice', 'reverse', 'sort'];\nmethods.forEach((method) => {\n  // 用户调用push方法会先自己重写的方法, 之后调用数组原来的方法\n  arrayPrototype[method] = function (...args) {\n    // 需要对新增的数据再次进行劫持\n    let inserted;\n    const ob = this.__ob__;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args; // 数组\n        break;\n      case 'splice': // arr.splice(1, 1, xxx)\n        inserted = args.slice(2);\n        break;\n      default:\n        break;\n    }\n    if (inserted) {\n      // 对新增的数据再次进行观测\n      ob.observeArray(inserted);\n    }\n    const result = oldArrayPrototype[method].call(this, ...args);\n    ob.dep.notify(); // 数据变化了, 通知对应的watcher实现更新逻辑\n    return result;\n  };\n});\n\nexport default arrayPrototype;\n","import arrayPrototype from './array';\nimport Dep from './dep';\n\n// 1.给每个对象和数组也增加dep属性\n// 2.当页面取值的时候会执行get方法, 拿到刚才新增的dep属性, 让它记住这个watcher\n// 3.稍后数据变化, 触发当前数组的dep中存放的watcher去更新\n\nclass Observer {\n  constructor(data) {\n    this.dep = new Dep(); // 给所有的对象都增加一个dep,后续会给对象增添新的属性也希望能实现更新\n    // 如果有__ob__属性, 说明被观测过了\n    Object.defineProperty(data, '__ob__', {\n      value: this,\n      enumerable: false, // 不可枚举(循环的时候无法获取到)\n      writable: true,\n      configurable: true,\n    });\n    if (Array.isArray(data)) {\n      // 如果是数组的话也是用defineProperty会浪费很多性能, 并且很少用户会通过索引操作 arr[666] = 777\n      // vue3中的Polyfill直接就给数组做代理了\n      // 改写数组的方法, 用户调用了可以改写数组方法的api, 那么就去劫持这个方法\n      // 变异方法 push pop shift unshift reverse sort splice\n      // 修改数组的索引和长度无法更新视图\n      data.__proto__ = arrayPrototype;\n      // 如果数组里面放的是对象类型, 期望它也会被变成响应式的\n      this.observeArray(data);\n    } else {\n      this.walk(data);\n    }\n  }\n  observeArray(data) {\n    data.forEach((item) => observe(item)); // 如果是对象才观测\n  }\n  walk(data) {\n    // 循环对象, 尽量不用for in 会遍历原型链\n    let keys = Object.keys(data);\n    keys.forEach((key) => {\n      // 没有重写数组里的每一项\n      defineReactive(data, key, data[key]);\n    });\n  }\n}\n\n// 深层次嵌套会递归, 递归多了性能差, 不粗案子属性监控不到, 存在的属性要重写方法\nfunction dependArray(value) {\n  for (let i = 0; i < value.length; i++) {\n    let current = value[i];\n    current.__ob__ && current.__ob__.dep.depend();\n    if (Array.isArray(current)) {\n      dependArray(current);\n    }\n  }\n}\n\n// 性能不好的原因, 所有的属性都被重新定义了一遍\n// 一上来需要将对象深度代理, 性能差\n// 闭包 属性劫持\nfunction defineReactive(data, key, value) {\n  const childOb = observe(value); // 递归代理属性, childOb就是当前的实例\n  // 属性会全部被重写添加了get和set\n  let dep = new Dep(); // 每一个属性都有一个dep\n  Object.defineProperty(data, key, {\n    // 取值的时候 会执行get\n    get() {\n      if (Dep.target) {\n        dep.depend(); // 让这个属性的收集器记住当前的watcher\n        if (childOb) {\n          childOb.dep.depend(); // 让数组和对象本身也实现依赖收集\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value;\n    },\n    // 修改的时候 会执行set\n    set(newValue) {\n      // 修改的时候 会执行set\n      if (newValue === value) return;\n      observe(newValue);\n      value = newValue;\n      dep.notify(); // 通知更新\n    },\n  });\n}\n\nexport function observe(data) {\n  if (typeof data !== 'object' || data == null) {\n    // 如果不是对象类型, 那么不需要做任何处理\n    return;\n  }\n  if (data.__ob__ instanceof Observer) {\n    // 说明这个属性已经被代理过了\n    return data.__ob__;\n  }\n  // 如果一个对象已经被观测了, 就不要再次被观测了\n  // __ob__ 标识是否又被观测过\n  return new Observer(data);\n}\n\n// 总结:\n// 1.在Vue2中对象响应式原理, 就是给每个属性增加get和set, 而且递归操作(用户在写代码的时候尽量不要把所有属性都放在data中, 层次尽可能不要太深), 赋值一个新对象也会被变成响应式\n// 2.数组没有使用defineProperty, 采用的是函数劫持创造一个新的原型重写了这个原型的7个方法, 用户在调用的时候采用的是这7个方法, 增加了逻辑如果是新增的数据会再次被劫持, 最终调用数组的原有方法(注意数字的索引和长度没有被监控), 数组中对象类型会被进行响应式处理\n\n// 补充:\n// 1.每个类头有一个prototype指向了一个公共的空间\n// 2.每个实例可以通过__proto__找到所属类的prototype对应的内容\n","import Dep from './observer/dep';\nimport { observe } from './observer/index';\nimport Watcher, { nextTick } from './observer/watcher';\n\nexport function initState(vm) {\n  // 获取传入的数据对象\n  const options = vm.$options;\n\n  // 后续实现计算属性 这里初始化的顺序依次是 prop>methods>data>computed>watch\n  if (options.data) {\n    // 初始化data\n    initData(vm);\n  }\n  if (options.computed) {\n    initComputed(vm);\n  }\n  if (options.watch) {\n    initWatch(vm);\n  }\n}\n\nfunction proxy(vm, source, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[source][key];\n    },\n    set(newValue) {\n      vm[source][key] = newValue;\n    },\n  });\n}\n\nfunction initData(vm) {\n  let data = vm.$options.data;\n  // 如果是函数就拿到函数的返回值, 否则就直接采用data作为数据源\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n  // 期望用户可以直接通过 vm.xxx 获取值, 也可以这样取值 vm._data.xxx\n  for (let key in data) {\n    proxy(vm, '_data', key);\n  }\n  // 属性劫持, 采用defineProperty将所有的属性进行劫持\n  observe(data);\n}\n\nfunction initWatch(vm) {\n  const watch = vm.$options.watch;\n  for (let key in watch) {\n    const handler = watch[key]; // 字符串 数组 函数\n    if (Array.isArray(handler)) {\n      for (let i = 0; i < handler.length; i++) {\n        createWatch(vm, key, handler[i]);\n      }\n    } else {\n      // 对当前属性进行创建watcher 存放的回调是handler 取数据是从vm上获取\n      createWatch(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatch(vm, key, handler) {\n  // 判断如果handler是一个字符串 可以采用实例上的方法\n  let options;\n  if (typeof handler === 'object' && handler !== null) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(key, handler, options);\n}\n\nfunction initComputed(vm) {\n  const computed = vm.$options.computed;\n  const watchers = (vm._computedWatchers = {}); // 将计算属性watcher保存到vm上\n  for (let key in computed) {\n    let userDef = computed[key];\n    // 监控计算属性中get的变化\n    const fn = typeof userDef === 'function' ? userDef : userDef.get;\n    // 如果直接new Watcher 默认就会执行fn 将属性和watcher对应起来\n    watchers[key] = new Watcher(vm, fn, { lazy: true });\n    defineComputed(vm, key, userDef);\n  }\n}\n\nfunction defineComputed(target, key, userDef) {\n  const setter = userDef.set || (() => {});\n  // 每次取值都会执行 可以通过实例拿到对应的属性\n  Object.defineProperty(target, key, {\n    get: createComputedGetter(key),\n    set: setter,\n  });\n}\n\n// 计算属性根本不会收集依赖 只会让自己的依赖属性去收集依赖\nfunction createComputedGetter(key) {\n  return function () {\n    const watcher = this._computedWatchers[key]; // 获取到对应属性的watcher\n    if (watcher.dirty) {\n      // 如果是脏的就去执行 用户传入的函数\n      watcher.evaluate(); // 求值后 dirty变为了false 下次就不求值了\n    }\n    // 在求值的过程中 stack = [渲染watcher, 计算属性watcher]\n    // 在evaluate执行完毕后 stack = [渲染watcher] => Dep.target = 渲染watcher\n    if (Dep.target) {\n      // 让计算属性watcher对应的两个dep记录watcher即可\n      // 计算属性出栈后 还要渲染watcher 应该让计算属性watcher里面的属性 也去收集上一层watcher\n      watcher.depend();\n    }\n    return watcher.value; // 最后返回的是watcher上的值\n  };\n}\n\nexport function stateMixin(Vue) {\n  Vue.prototype.$nextTick = nextTick;\n  Vue.prototype.$watch = function (exprOrFn, cb, options = {}) {\n    options.user = true; // 标记为用户watcher\n    const watcher = new Watcher(this, exprOrFn, options, cb);\n    if (options.immediate) {\n      cb.call(this, watcher.value);\n    }\n  };\n}\n","import { compileToFunctions } from './compiler/index';\nimport { mergeOptions } from './gloablAPI';\nimport { callHook, mountComponent } from './lifecycle';\nimport { initState } from './state';\n\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    const vm = this;\n    // vue中会判断如果是$开头的属性不会被变成响应式数据\n    this.$options = mergeOptions(vm.constructor.options, options); // 所有后续的扩展方法都有一个$options选项可以获取用户的所有选项\n    console.log(this.$options);\n\n    // 对于实例的数据源 props data methods computed watch\n    // prop data\n    callHook(vm, 'beforeCreate');\n    initState(vm);\n    callHook(vm, 'created');\n\n    // 状态初始化完毕后需要进行页面挂载\n    if (vm.$options.el) {\n      // el属性和直接调用$mount是一样的\n      vm.$mount(vm.$options.el);\n    }\n  };\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    el = document.querySelector(el);\n    const options = vm.$options;\n    if (!options.render) {\n      let template = options.template;\n      if (!template && el) {\n        template = el.outerHTML;\n      }\n      // 将template变成render函数\n      // 创建render函数 => 虚拟dom => 渲染真实dom\n      const render = compileToFunctions(template); // 开始编译\n      options.render = render;\n    }\n    // 将当前组件实例挂载到真实的el节点上面\n    return mountComponent(vm, el);\n  };\n}\n\n// diff算法, 主要是两个虚拟节点的比对, 需要根据模板渲染出一个render函数, render函数可以返回一个虚拟节点, 数据更新了重新调用render函数, 可以再返回一个虚拟节点\n","// 整个自己编写的Vue入口\n\nimport { compileToFunctions } from './compiler/index';\nimport initGlobalAPI from './gloablAPI';\nimport { initMixin } from './init';\nimport { lifeCycleMixin } from './lifecycle';\nimport { nextTick } from './observer/watcher';\nimport { stateMixin } from './state';\nimport { createElm, patch } from './vdom/patch';\n\n// es6的类, 要求所有的扩展都在类的内部来进行扩展\n\nfunction Vue(options) {\n  this._init(options);\n}\n\ninitMixin(Vue); // 后续再扩展都可以采用这种方式\nlifeCycleMixin(Vue);\nstateMixin(Vue);\ninitGlobalAPI(Vue);\n\n// ------------- 为了方便观察前后的虚拟节点-- 测试的-----------------\n// let vm0 = new Vue({\n//   data: {\n//     name: 'pf',\n//     age: 22,\n//   },\n// });\n// let render0 = compileToFunctions(\n//   `<div class=\"a\" style=\"color: lightblue;\" b=\"1\"><span>{{name}}</span><span>{{age}}</span></div>`\n// );\n// let oldVnode = render0.call(vm0);\n// let ele = createElm(oldVnode);\n// document.body.appendChild(ele);\n\n// let vm = new Vue({\n//   data: {\n//     message: 'hello world',\n//   },\n// });\n// let render = compileToFunctions(\n//   `<div class=\"b\" style=\"color: red\" c=33><span>{{message}}</span></div>`\n// );\n// let newVnode = render.call(vm);\n\n// let render1 = compileToFunctions(`<ul  a=\"1\" style=\"color:blue\">\n//     <li key=\"A\">a</li>\n//     <li key=\"B\">b</li>\n//     <li key=\"C\">c</li>\n//     <li key=\"D\">d</li>\n// </ul>`);\n// let vm1 = new Vue({ data: { name: 'pf' } });\n// let prevVnode = render1.call(vm1);\n// let el = createElm(prevVnode);\n// document.body.appendChild(el);\n\n// let render2 = compileToFunctions(`<ul  a=\"1\"  style=\"color:red;\">\n//     <li key=\"C\">c</li>\n//     <li key=\"A\">a</li>\n//     <li key=\"D\">d</li>\n//     <li key=\"E\">e</li>\n//     <li key=\"Q\">q</li>\n// </ul>`);\n// let vm2 = new Vue({ data: { name: 'zf' } });\n// let nextVnode = render2.call(vm2);\n\n// // 直接将新的节点替换掉了老的，不是直接替换 而是比较两个人的区别之后在替换 diff算法\n// // diff算法是一个平级比较的过程 父亲和父亲比对，儿子和儿子比对\n// // 主要比对标签名和key来判断是不是同一个元素, 如果标签和key都一样说明两个元素使同一个元素\n// setTimeout(() => {\n//   // patch(oldVnode, newVnode);\n\n//   patch(prevVnode, nextVnode);\n// }, 2000);\n\n// 给Vue添加原型方法我们通过文件的方式来添加, 防止所有的功能都在一个文件中来处理\nexport default Vue;\n"],"names":["defaultTagRE","genProps","attrs","str","i","length","attr","name","obj","value","split","reduce","memo","current","_current$split","_current$split2","_slicedToArray","key","concat","JSON","stringify","slice","gen","node","type","generate","text","test","tokens","match","startIndex","lastIndex","exec","endIndex","index","push","trim","join","genChildren","el","children","map","child","code","tag","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","attribute","parse","html","root","stack","createASTElement","tagName","parent","start","element","end","pop","chars","replace","parseStartTag","matches","advance","n","substring","textEnd","indexOf","startTagMatch","compileToFunctions","template","ast","renderFn","Function","initGlobalAPI","Vue","options","_base","mixin","mergeOptions","extend","Sub","arguments","undefined","_init","prototype","Object","create","constructor","components","component","id","definition","strats","LIFECYCLE","forEach","hook","p","c","parentVal","childVal","res","mergeField","hasOwnProperty","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","notify","update","pushTarget","popTarget","Watcher","vm","exprOrFn","cb","renderWatcher","deps","depsId","Set","lazy","dirty","user","getter","path","get","dep","has","add","evaluate","call","queueWatcher","run","oldValue","newValue","queue","pending","flushSchedulerQueue","flushQueue","q","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","isReservedTag","includes","createElement","data","_len","Array","_key","vnode","Ctor","$options","createComponentVnode","init","componentInstance","componentOptions","$mount","_typeof","isSameVnode","n1","n2","createComponent","createElm","$el","patchProps","appendChild","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","mountChildren","newChildren","patchVnode","oldVnode","parentNode","replaceChild","oldChildren","updateChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","insertBefore","nextSibling","moveIndex","moveVnode","childEl","anchor","removeChild","patch","isRealElement","nodeType","oldElm","callHook","handlers","lifeCycleMixin","_c","apply","_v","_s","_render","render","_update","prevVnode","_vnode","mountComponent","updateComponent","console","log","oldArrayPrototype","arrayPrototype","methods","method","_oldArrayPrototype$me","inserted","ob","__ob__","args","observeArray","result","Observer","defineProperty","enumerable","writable","configurable","isArray","__proto__","walk","item","keys","defineReactive","dependArray","childOb","set","initState","initData","computed","initComputed","watch","initWatch","proxy","source","_data","handler","createWatch","$watch","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","stateMixin","$nextTick","immediate","initMixin","querySelector","outerHTML"],"mappings":"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"}